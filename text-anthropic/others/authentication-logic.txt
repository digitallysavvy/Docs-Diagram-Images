1. Overall Structure:
- The diagram is a sequence diagram.

2. Main Entities and Elements:
- Token server (box)
- App (box)
- SD-RTN (box)
- Join a channel with authentication (sub-element within Token server box)
- Renew token (sub-element within Token server box)

3. Data Flow:
- Request a token using channel name, role, token type, and user ID (dashed arrow from App to Token server)
- Validate user against internal security (solid arrow within Token server box)
- Generate a token and return it to the client (solid arrow from Token server to App)
- Join a channel with uid, channel name, and token (solid arrow from App to SD-RTN)
- Validate the token (solid arrow within SD-RTN box)
- Trigger the callback after adding user to the channel (dashed arrow from SD-RTN to App)
- Trigger event: Token Privilege will Expire (dashed arrow from SD-RTN to App)
- Request a fresh token using channel name, role, token type, and user ID (dashed arrow from App to Token server)
- Validate user request against internal logic (solid arrow within Token server box)
- Generate a fresh token and return it to the client (solid arrow from Token server to App)
- Send the fresh token with a RenewToken request (solid arrow from App to SD-RTN)

4. Detailed Content:
- Token server box:
  Join a channel with authentication newline
  Request a token using channel name, newline
  role, token type, and user ID newline
  Validate user against newline
  internal security newline
  Generate a token and return it to the client

  Renew token newline
  Request a fresh token using channel name, newline
  role, token type, and user ID newline
  Validate user request against internal logic newline
  Generate a fresh token and return it to the client

- App box: (no text content)
- SD-RTN box: Validate the token

5. Configuration or Additional Notes:
- The diagram is divided into three sections: "Implemented by you", "Provided by Agora", with Token server and App in the "Implemented by you" section, and SD-RTN in the "Provided by Agora" section.