This image appears to be a flowchart outlining the process of user authentication and token management for an application interfacing with Agora's SD-RTN (Software-Defined Real-Time Network). The chart is divided into three vertical sections, each representing a different element in the authentication process:

1. **Token server (Implemented by you)**: This column outlines the steps taken by the server that you need to implement. It includes:
   - **Join a channel with authentication**: The process to request and validate a token which includes the channel name, role, token type, and user ID. Once validated, a token is generated and returned to the client.
   - **Renew token**: When an existing token is close to expiring, a new token has to be requested following similar validation steps.

2. **App**: This central column represents the application's role in processing both the joining and token renewing tasks. It interacts both with the token server to get or renew tokens, and with Agora's system to use those tokens.
   - **Receive and use the new or renewed token for accessing channels via the Agora system.**

3. **Provided by Agora (SD-RTN)**: This column on the right shows the steps managed by Agora's platform.
   - **Join a channel**: The application uses a UID (User ID), channel name, and token to join a channel. Agora validates the token.
   - **Manage callbacks and token expiry events**: Triggers relevant callbacks after a user joins a channel and manages events related to token privileges expiring.

Overall, the diagram serves as a guide for developers to understand how to integrate token-based authentication for a real-time communication application using Agora's technology.